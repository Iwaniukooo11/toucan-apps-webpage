{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/ColorLink/ColorLink.js","webpack:///./src/images/home-bg.svg"],"names":["StyledImage","styled","img","StyledLinkWrap","main","data","IndexPage","props","pageWindow","window","undefined","console","log","useState","innerHeight","height","setHeight","useEffect","addEventListener","page","title","uppercase","bold","noMargin","spacing","center","as","numOfPink","big","extra","to","src","image","alt","Text","Desc","theme","colorPink","colorPurple","Row","span","colorBlack","StyledLink","Link","ALink","a","ColorLink","outside","href","target","className","children","module","exports"],"mappings":"2FAAA,6HAYMA,EAAcC,IAAOC,IAAV,wEAAGD,CAAH,gQAmBXE,EAAiBF,IAAOG,KAAV,2EAAGH,CAAH,gIAUdI,EAEF,kIAsCWC,UAnCG,SAAAC,GAChB,IAAMC,EAA+B,oBAAXC,YAAyBC,EAAYD,OAE/DE,QAAQC,IAAIL,EAAMF,MAHO,MAIGQ,mBAC1BL,EAAaA,EAAWM,YAAc,MADjCC,EAJkB,KAIVC,EAJU,KAezB,OAPAC,qBAAU,WACJT,GACFA,EAAWU,iBAAiB,UAAU,kBACpCF,EAAUR,EAAWM,kBAExB,IAGD,kBAAC,IAAD,CAAQK,KAAK,OAAOC,MAAM,OAAOL,OAAQA,GACvC,kBAAC,IAAD,CAAMM,WAAS,EAACC,MAAI,EAACC,UAAQ,EAACC,SAAO,EAACC,QAAQ,EAAOC,GAAI,MAAzD,8BAGA,kBAAC,IAAD,CAAQC,UAAW,EAAGC,KAAG,EAACC,MAAO,8BAAjC,eAGA,kBAAC,IAAD,KAAOxB,GACP,kBAACF,EAAD,KACE,kBAAC,IAAD,CAAW2B,GAAG,cAAd,gCACA,kBAAC,IAAD,CAAWA,GAAG,YAAd,kBACiB,6CADjB,oBAIF,kBAAC9B,EAAD,CAAa+B,IAAKC,IAAOC,IAAI,yC,oCC5EnC,6DAMMC,EAAOjC,YAAOkC,KAAV,sEAAGlC,CAAH,qKACC,qBAAGmC,MAAkBC,aAWnB,qBAAGD,MAAkBE,eAG5BC,EAAMtC,IAAOuC,KAAV,qEAAGvC,CAAH,4HACE,qBAAGmC,MAAkBK,cAY1BC,EAAazC,YAAO0C,KAAV,4EAAG1C,CAAH,4IAWD,qBAAGmC,MAAkBC,aAI9BO,EAAQ3C,IAAO4C,EAAV,uEAAG5C,CAAH,4IAWI,qBAAGmC,MAAkBC,aAmBrBS,IAdG,SAAAvC,GAChB,OAAOA,EAAMwC,QACX,kBAACH,EAAD,CAAOI,KAAMzC,EAAMuB,GAAImB,OAAO,UAC5B,kBAACV,EAAD,CAAKW,UAAW,OAAQ,KACxB,kBAAChB,EAAD,CAAMgB,UAAW,QAAS3C,EAAM4C,WAGlC,kBAACT,EAAD,CAAYZ,GAAIvB,EAAMuB,IACpB,kBAACS,EAAD,CAAKW,UAAW,OAAQ,KACxB,kBAAChB,EAAD,CAAMgB,UAAW,QAAS3C,EAAM4C,a,qBC1EtCC,EAAOC,QAAU,IAA0B","file":"component---src-pages-index-js-4f50d0e6866985fbbbfe.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\n\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../layout/layout\"\nimport Header from \"../components/Header/Header\"\nimport Desc from \"../components/Desc/Desc\"\nimport ColorLink from \"../components/ColorLink/ColorLink\"\n\nimport image from \"../images/home-bg.svg\"\n\nconst StyledImage = styled.img`\n  width: 100%;\n  transform: scale(1.3) translateY(52px);\n  align-self: flex-end;\n  display: block;\n\n  @media (min-width: 1024px) {\n    max-width: 80%;\n    justify-self: flex-end;\n  }\n  @media (min-width: 1200px) {\n    max-width: 66%;\n    transform: translate(20px, 10px);\n    /* justify-self: flex-end; */\n    position: fixed;\n    right: 0;\n    bottom: 0;\n  }\n`\nconst StyledLinkWrap = styled.main`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: flex-start;\n  @media (min-width: 1200px) {\n    margin: 20px 0;\n  }\n`\n\nconst data = {\n  desc:\n    \"Jesteśmy studiem projektującym aplikacje, które ułatwiają codzienne życie. Skupiamy się na tworzeniu produktów dla społeczności\",\n}\n\nconst IndexPage = props => {\n  const pageWindow = typeof window === \"undefined\" ? undefined : window\n\n  console.log(props.data)\n  const [height, setHeight] = useState(\n    pageWindow ? pageWindow.innerHeight : null\n  )\n\n  useEffect(() => {\n    if (pageWindow)\n      pageWindow.addEventListener(\"resize\", () =>\n        setHeight(pageWindow.innerHeight)\n      )\n  }, [])\n\n  return (\n    <Layout page=\"home\" title=\"Home\" height={height}>\n      <Desc uppercase bold noMargin spacing center={false} as={\"h2\"}>\n        aplikacje dla społeczności\n      </Desc>\n      <Header numOfPink={1} big extra={\"aplikacje dla społeczności\"}>\n        toucan apps\n      </Header>\n      <Desc>{data.desc}</Desc>\n      <StyledLinkWrap>\n        <ColorLink to=\"/aplikacje\">Zobacz, co już mamy na rynku</ColorLink>\n        <ColorLink to=\"/kontakt\">\n          Masz pomysł na <strong>aplikację</strong>? Napisz do nas\n        </ColorLink>\n      </StyledLinkWrap>\n      <StyledImage src={image} alt=\"Człowiek opierający się o telefon\" />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\n// export const pageQuery = graphql`\n//   # query IndexQuery\n//   query {\n//     allStrapiStatic(filter: { page: { eq: \"home\" } }) {\n//       edges {\n//         node {\n//           id\n//           desc\n//         }\n//       }\n//     }\n//   }\n// `\n","import React from \"react\"\n// import { Link } from \"gatsby\"\nimport Link from \"../AniLink/AniLink\"\nimport styled from \"styled-components\"\nimport Desc from \"../Desc/Desc\"\n\nconst Text = styled(Desc)`\n  color: ${({ theme }) => theme.colorPink};\n  font-weight: bold;\n  display: inline-block;\n  margin-bottom: 0;\n  transition: 0.3s;\n  &:hover {\n    transform: translateX(20px);\n  }\n\n  &::first-letter {\n    transition: 0.3s;\n    color: ${({ theme }) => theme.colorPurple};\n  }\n`\nconst Row = styled.span`\n  color: ${({ theme }) => theme.colorBlack};\n  font-weight: bold;\n  /* font-family: Arial; */\n  margin-right: 10px;\n  transition: 0.3s;\n\n  display: inline;\n  @media (min-width: 1200px) {\n    font-size: 20px;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: flex-start;\n  margin: 5px 0;\n\n  &:hover {\n    .text {\n      transform: translateX(15px);\n    }\n    .row {\n      transform: translateX(3px);\n      color: ${({ theme }) => theme.colorPink};\n    }\n  }\n`\nconst ALink = styled.a`\n  display: flex;\n  align-items: flex-start;\n  margin: 5px 0;\n\n  &:hover {\n    .text {\n      transform: translateX(15px);\n    }\n    .row {\n      transform: translateX(3px);\n      color: ${({ theme }) => theme.colorPink};\n    }\n  }\n`\n\nconst ColorLink = props => {\n  return props.outside ? (\n    <ALink href={props.to} target=\"_blank\">\n      <Row className={\"row\"}>{\">\"}</Row>\n      <Text className={\"text\"}>{props.children}</Text>\n    </ALink>\n  ) : (\n    <StyledLink to={props.to}>\n      <Row className={\"row\"}>{\">\"}</Row>\n      <Text className={\"text\"}>{props.children}</Text>\n    </StyledLink>\n  )\n}\n\nexport default ColorLink\n","module.exports = __webpack_public_path__ + \"static/home-bg-6b2aa824a76430f3b3dfc42f2c30fb05.svg\";"],"sourceRoot":""}